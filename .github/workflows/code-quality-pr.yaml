# This workflow finds which files were changed, prints them,
# and runs `pre-commit` on those files.

# Inspired by the sktime library:
# https://github.com/alan-turing-institute/sktime/blob/main/.github/workflows/test.yml

name: Code Quality PR

on:
  pull_request:
    branches: [main, "release/*"]

# Grant the token minimal permissions needed for PR file listing
permissions:
  contents: read
  pull-requests: read

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # ensure history for diffs

      - name: Set up Python 3.9
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev --no-interaction --no-root

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: List modified files
        run: echo "${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Run pre-commit on modified files
        if: steps.changed-files.outputs.all_changed_files != ''
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --files ${{ steps.changed-files.outputs.all_changed_files }}

      # Optional: skip if nothing changed (pre-commit would no-op anyway)
      - name: No changes detected
        if: steps.changed-files.outputs.all_changed_files == ''
        run: echo "No changed files."
